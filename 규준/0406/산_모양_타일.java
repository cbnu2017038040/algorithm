class Solution {
    public int solution(int n, int[] tops) {
        
        // 한 변의 길이가 1인 정삼각형 2n+1개를 이어붙인다
        // 윗변의 길이가 n, 아랫변의 길이가 n + 1인 사다리꼴을 만들 수 있다
        // 사다리꼴의 윗변과 변을 공유하는 n개의 정삼각형 중 일부의 위에 정삼각형을 붙였다
        // 주의 : n은 윗변길이 기준이다.
        // 즉, 뒤집힌 정삼각형 n개와 안뒤집힌거 n + 1개
        
        // 일부를 쌓은 모양에서
        // 정삼각형 타일이나 정삼각형 2개를 이어붙인 마름모 타일을 이용해
        // 빈 곳이 없도록 채우려 한다.
        // 정삼각형 타일과 마름모 타일은 돌려서 사용할 수 있다
        
        // 다른 타일과 겹치게 하거나, 모양을 벗어나게 할 수 없다.
        
        // 정수 n
        // 사다리꼴 윗변에 붙인 정삼각형을 나타내는 1차원 정수배열 tops
        // tops가 하나씩 올라갈때마다 dp로 찾아야 할거같은데...
        
        int[][] dp = new int[n + 1][2];
        
        // 맨오른쪽 마름모 쓰지않는경우
        dp[0][0] = 1;
        // 쓰는경우
        dp[0][1] = 0;
        
        for(int i = 1; i <= n; i++){
            if(tops[i - 1] == 1){
                dp[i][0] = (dp[i - 1][0] * 3 + dp[i - 1][1] * 2) % 10007;
                dp[i][1] = (dp[i - 1][0] + dp[i - 1][1]) % 10007;
            } else  {
                dp[i][0] = (dp[i - 1][0] * 2 + dp[i - 1][1]) % 10007;
                dp[i][1] = (dp[i - 1][0] + dp[i - 1][1]) % 10007;
            }
        }
        
        return (dp[n][0] + dp[n][1]) % 10007;
        
    }
}